version: '3.8'

services:
  main:
    image: rslethz/grandtour-datasets:api-server-latest
    container_name: api-server

    build:
      context: ./backend
      dockerfile: Dockerfile

    ports:
      - 127.0.0.1:${SERVER_PORT}:${SERVER_PORT}

    env_file:
      - .env

    networks:
      - webnet
      - privatenet

    depends_on:
      - database


  database:
    image: postgres:13
    container_name: postgres_db

    ports:
      - '5432:5432'

    networks:
      - privatenet

    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

    volumes:
      - postgres_db_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio_file_storage

    volumes:
      - minio_data:/data

    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}

    command: server --console-address ":9001" /data

    ports:
      - "127.0.0.1:9000:9000" # file storage
      - "127.0.0.1:9001:9001" # management console
    networks:
      - webnet
      - privatenet


  frontend:
    image: rslethz/grandtour-datasets:vuejs_frontend-latest
    container_name: vuejs_frontend

    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - QUASAR_ENDPOINT=${QUASAR_ENDPOINT}

    ports:
      - "8003:80"

    networks:
      - webnet

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - privatenet

  bullconsumer:
    image: rslethz/grandtour-datasets:bull-consumer-latest
    container_name: bullconsumer
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      - privatenet
    depends_on:
      - database

volumes:
  postgres_db_data:
  minio_data:

networks:
  webnet:
  privatenet: